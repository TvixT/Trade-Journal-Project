# Generated by Django 4.2.7 on 2025-06-26 04:27

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(help_text='Stock/Crypto symbol (e.g., AAPL, BTCUSD)', max_length=10)),
                ('trade_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], default='BUY', max_length=4)),
                ('position_type', models.CharField(choices=[('LONG', 'Long'), ('SHORT', 'Short')], default='LONG', max_length=5)),
                ('entry_price', models.DecimalField(decimal_places=4, help_text='Price at which position was entered', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('exit_price', models.DecimalField(blank=True, decimal_places=4, help_text='Price at which position was exited', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('position_size', models.DecimalField(decimal_places=4, help_text='Number of shares/units traded', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('entry_date', models.DateTimeField(help_text='Date and time when trade was entered')),
                ('exit_date', models.DateTimeField(blank=True, help_text='Date and time when trade was exited', null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=4, help_text='Stop loss price', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('take_profit', models.DecimalField(blank=True, decimal_places=4, help_text='Take profit price', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('commission', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Commission paid for the trade', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the trade')),
                ('is_open', models.BooleanField(default=True, help_text='Whether the trade is still open')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trade',
                'verbose_name_plural': 'Trades',
                'ordering': ['-entry_date'],
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the journal entry', max_length=200)),
                ('content', models.TextField(help_text='Detailed content of the journal entry')),
                ('entry_date', models.DateField(help_text='Date of the journal entry')),
                ('mood', models.CharField(blank=True, choices=[('CONFIDENT', 'Confident'), ('UNCERTAIN', 'Uncertain'), ('FEARFUL', 'Fearful'), ('GREEDY', 'Greedy'), ('CALM', 'Calm'), ('EXCITED', 'Excited'), ('FRUSTRATED', 'Frustrated'), ('DISCIPLINED', 'Disciplined')], help_text='Your mood during/after the trade', max_length=20)),
                ('market_conditions', models.TextField(blank=True, help_text='Description of market conditions')),
                ('strategy_used', models.CharField(blank=True, help_text='Trading strategy employed', max_length=200)),
                ('lessons_learned', models.TextField(blank=True, help_text='What was learned from this trade')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags for categorization', max_length=200)),
                ('rating', models.IntegerField(blank=True, help_text='Self-rating of trade execution (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trade', models.ForeignKey(blank=True, help_text='Associated trade (optional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='journal_entries', to='journal.trade')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Journal Entry',
                'verbose_name_plural': 'Journal Entries',
                'ordering': ['-entry_date', '-created_at'],
            },
        ),
    ]
